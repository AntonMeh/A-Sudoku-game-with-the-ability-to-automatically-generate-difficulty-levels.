<Window x:Class="Sudoku.View.RulesBox"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Правила гри Судоку" Height="700" Width="500">

    <ScrollViewer VerticalScrollBarVisibility="Auto" Padding="10">
        <StackPanel>
            <TextBlock Text="Правила гри Судоку для початківців"
                       FontSize="20" FontWeight="Bold" Margin="0,0,0,10"/>

            <TextBlock Text="Використовуйте цифри від 1 до 9"
                       FontWeight="Bold" FontSize="14" Margin="0,0,0,5"/>

            <TextBlock TextWrapping="Wrap"
                       Text="Судоку грає на ігровому полі, що складається з 9 на 9 клітин, всього 81 клітина. Усередині ігрового поля знаходяться 9 квадратів (що складаються з 3 x 3 клітин). Кожен горизонтальний рядок, вертикальний стовпець і квадрат (9 клітин кожен) повинні заповнюватись цифрами 1-9, не повторюючи жодних чисел у рядку, стовпці чи квадраті. Це складно звучить? Як видно із зображення нижче, кожне ігрове поле Судоку має кілька клітин, які вже заповнені. Чим більше клітин спочатку заповнено, тим легше гра. Чим менше клітин спочатку заповнено, тим складніше гра." FontSize="13" Margin="0,0,0,10" TextAlignment="Justify"/>

            <Image Source="/Image1.png" Stretch="Uniform" Height="300" Margin="0,0,0,10"/>

            <TextBlock TextWrapping="Wrap"
                       Text="Як ви можете бачити, у верхньому лівому квадраті (обведений синім) вже заповнені 7 із 9 клітин. Єдині числа, які відсутні у цьому квадраті, це числа 5 і 6. Бачачи, які числа відсутні у кожному квадраті, рядку чи стовпці, ми можемо використати процес виключення та дедуктивне мислення, щоб вирішити, які числа повинні знаходитись у кожній клітці." FontSize="13" Margin="0,0,0,10" TextAlignment="Justify"/>
            <TextBlock TextWrapping="Wrap"
                       Text="      Наприклад, у верхньому лівому квадраті ми знаємо, що для завершення квадрата потрібно додати числа 5 і 6, але дивлячись на сусідні рядки і квадрати ми поки що не можемо чітко визначити, яке число додати до якоїсь клітини. Це означає, що тепер ми повинні поки що пропустити верхній лівий квадрат і натомість спробувати заповнити прогалини в деяких інших місцях ігрового поля. " Margin="0,0,0,10" TextAlignment="Justify" FontSize="13" Grid.ColumnSpan="2" Grid.Row="1" />
            <TextBlock Text="Використовуйте метод виключення"
                       FontWeight="Bold" FontSize="14" Margin="0,10,0,5" TextAlignment="Justify"/>

            <TextBlock TextWrapping="Wrap"
                       Text="Що ми робимо, коли використовуємо метод виключення у грі Судоку? Ось приклад. У цій сітці Судоку (показано нижче) у лівому вертикальному стовпці (обведений синім) немає лише кількох чисел: 1, 5 і 6. Один із способів з'ясувати, які числа можна вставити в кожну клітину - це використовувати метод виключення, перевіряючи, які інші числа вже є в кожному квадраті, оскільки не допускається дублювання чисел 1-9 в кожному квадраті, рядку або стовпці." FontSize="13" Margin="0,0,0,10" TextAlignment="Justify"/>

            <Image Source="/Image2.png" Stretch="Uniform" Height="300" Margin="0,0,0,10"/>

            <TextBlock TextWrapping="Wrap"
                       Text="У цьому випадку ми можемо швидко помітити, що у верхньому лівому та центральному лівому квадратах вже є число 1 (числа 1 обведені червоним). Це означає, що у крайньому лівому стовпці є лише одне місце, у яке можна вставити число 1 (обведено зеленим). Ось як метод виключення працює в Судоку – ви дізнаєтеся, які клітини вільні, які числа відсутні, а потім виключаєте числа, які вже присутні у квадраті, стовпцях та рядах. Відповідно заповнюєте порожні клітини відсутніми числами. " FontSize="13" Margin="0,0,0,10" TextAlignment="Justify"/>

            <TextBlock TextWrapping="Wrap"
                       Text="Правила Судоку щодо нескладні – але гра надзвичайно різноманітна, з мільйонами можливих комбінацій чисел та широким діапазоном рівнів складності. Але все це засноване на простих принципах використання чисел 1-9, заповненні прогалин на основі дедуктивного мислення і чисел, що ніколи не повторюються, в кожному квадраті, рядку або стовпці." FontSize="13" Margin="0,0,0,10" TextAlignment="Justify"/>
            <Button x:Name="OkButton" Content="Зрозуміло" Click="OkButton_Click" FontFamily="Bernard MT Condensed" FontSize="18"></Button>
        </StackPanel>
    </ScrollViewer>
</Window>
